server {
    listen 80;
    listen [::]:80;

    server_name street.samoilenko.xyz;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    #return 301 https://street.samoilenko.xyz;

    location / {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
      try_files $uri $uri/ /index.html;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root  /usr/share/nginx/html;
    }
}

#-----
# This configuration is made for first-time deployment.
# The certification server requires an HTTP server while certificates are issued.
# After acquiring the certificates, we can redirect from HTTP to HTTPS and serve only on HTTPS.
# Certificates will be saved in ./certbot/conf/ dir on production machine, so
# we can redeploy docker compose freely without the certificate issuing process.
# The domain name is a placeholder for now. Awaiting access to DNS provider from the client
#-----

#server {
#    listen 443 ssl http2;
#
#    server_name street.samoilenko.xyz;
#
#    ssl_certificate /etc/nginx/ssl/live/street.samoilenko.xyz/fullchain.pem;
#    ssl_certificate_key /etc/nginx/ssl/live/street.samoilenko.xyz/privkey.pem; 
#    ssl_trusted_certificate /etc/nginx/ssl/live/street.samoilenko.xyz/fullchain.pem;
#
#    location / {
#      root   /usr/share/nginx/html;
#      index  index.html index.htm;
#      try_files $uri $uri/ /index.html;
#    }
#
#    error_page 500 502 503 504 /50x.html;
#    location = /50x.html {
#      root  /usr/share/nginx/html;
#    }
#}